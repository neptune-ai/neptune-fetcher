from pytest import fixture

from neptune_fetcher import ReadOnlyProject

# NOTE
# The fixtures below assume that we're testing on a "many metrics" project
# populated using the tests/populate_projects.py script, and that the project
# contains ONLY data generated by the script.
# If this is not the case, the tests will fail, as there are hard assumptions
# around names and values of the metadata.


@fixture(scope="session")
def project():
    # Assume project name and API token are set in the environment.
    # As ReadOnlyProject is basically stateless, we can reuse the same
    # instance across all tests.
    return ReadOnlyProject()


@fixture
def all_run_ids():
    return sorted([f"id-run-{i + 1}" for i in range(6)])


@fixture
def all_experiment_ids():
    return sorted([f"id-exp-{i + 1}" for i in range(6)])


@fixture
def all_experiment_names():
    return sorted([f"exp{i + 1}" for i in range(6)])


@fixture
def sys_columns_set(sys_columns):
    return set(sys_columns)


@fixture
def sys_columns():
    return ["sys/id", "sys/name", "sys/custom_run_id"]


@fixture
def id_to_name():
    """Expected sys/custom_run_id -> sys/name"""
    d = {f"id-run-{num}": "" for num in range(1, 7)}
    d |= {f"id-exp-{num}": f"exp{num}" for num in range(1, 7)}

    return d
