[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "semver"
pattern = "default-unprefixed"

[tool.poetry.dependencies]
python = "^3.9"

# Base neptune package
neptune-api = ">=0.17.0,<0.19.0"
backoff = "^2.0.0"
azure-storage-blob = "^12.7.0"
pandas = [
    { version = ">=1.4.0,<2.3.0", python = "<3.10" },
    { version = ">=1.4.0", python = ">=3.10" }
]

# Optional for default progress update handling
tqdm = { version = ">=4.66.0" }

[tool.poetry]
authors = ["neptune.ai <contact@neptune.ai>"]
description = "Neptune Fetcher"
repository = "https://github.com/neptune-ai/neptune-fetcher"
homepage = "https://neptune.ai/"
documentation = "https://docs.neptune.ai/"
license = "Apache License 2.0"
name = "neptune-fetcher"
readme = "README.md"
version = "0.1.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "MLOps",
    "ML Experiment Tracking",
    "ML Model Registry",
    "ML Model Store",
    "ML Metadata Store",
]
packages = [
    { include = "neptune_fetcher", from = "src" },
]

[tool.poetry.urls]
"Tracker" = "https://github.com/neptune-ai/neptune-fetcher/issues"
"Documentation" = "https://docs.neptune.ai/"

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
force_grid_wrap = 2

[tool.flake8]
max-line-length = 120
extend-ignore = "E203"

[tool.mypy]
mypy_path = "src/"
packages = "neptune_fetcher.alpha"
follow_imports = "silent"
install_types = "True"
non_interactive = "True"
disallow_untyped_defs = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
show_error_codes = "True"
warn_unused_ignores = "True"
ignore_missing_imports = "True"

[tool.pytest.ini_options]
retries = 3
retry_delay = 2
addopts = "--dist=loadfile -s"
